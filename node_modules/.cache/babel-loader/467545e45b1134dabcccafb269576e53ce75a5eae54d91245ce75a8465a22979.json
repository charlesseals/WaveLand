{"ast":null,"code":"var _jsxFileName = \"/Users/charlesseals/workspace/WaveLand/waveland-capstone/src/components/profile/ProfileForm.js\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProfileForm = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  // TODO: Provide initial state for profile\n  const [profile, updateProfile] = useState({\n    email: \"\",\n    userName: \"\",\n    id: 0\n  });\n  const localWavelandUser = localStorage.getItem(\"waveland_user\");\n  const wavelandUserObject = JSON.parse(localWavelandUser);\n  const [users, setUsers] = useState();\n\n  // TODO: Get employee profile info from API and update state\n  _s(useEffect(_s(() => {\n    _s();\n    fetch(`http://localhost:8088/users?userId=${wavelandUserObject.id}`).then(res => res.json()).then(data => {\n      fetch(`http://localhost:8088/users`).then(res => res.json()).then(usersArray => {\n        setUsers(usersArray);\n        const userObjects = data;\n        const matchingUserObject = () => {\n          userObjects.map(object => {\n            users.map(user => {\n              if (object.id === user.id) {\n                return;\n              }\n            });\n          });\n        };\n        updateProfile(matchingUserObject);\n      });\n    }, []);\n    const [feedback, setFeedback] = useState(\"\");\n    useEffect(() => {\n      if (feedback !== \"\") {\n        // Clear feedback to make entire element disappear after 3 seconds\n        setTimeout(() => setFeedback(\"\"), 3000);\n      }\n    }, [feedback]);\n    const handleSaveButtonClick = event => {\n      event.preventDefault();\n\n      /*\n          TODO: Perform the PUT fetch() call here to update the profile.\n          Navigate user to home page when done.\n      */\n      return fetch(`http://localhost:8088/users/${profile.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(profile)\n      }).then(res => res.json()).then(() => {\n        setFeedback(\"User profile successfully saved\");\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${feedback.includes(\"Error\") ? \"error\" : \"feedback\"} ${feedback === \"\" ? \"invisible\" : \"visible\"}`,\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"profile__title\",\n          children: \"User Profile Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"userName\",\n              children: \"Change username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              autoFocus: true,\n              type: \"text\",\n              className: \"form-control\",\n              value: profile.userName,\n              onChange: evt => {\n                // TODO: Update username property\n                const copy = {\n                  ...profile\n                };\n                copy.userName = evt.target.value;\n                updateProfile(copy);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Change email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: profile.email,\n              onChange: evt => {\n                // TODO: Update email property\n                const copy = {\n                  ...profile\n                };\n                copy.email = evt.target.value;\n                updateProfile(copy);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clickEvent => handleSaveButtonClick(clickEvent),\n          className: \"btn btn-primary\",\n          children: \"Save Updated Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }, \"4rEmEutGRh914ffX9a/xfKA7S18=\")), \"4rEmEutGRh914ffX9a/xfKA7S18=\");\n};\n_s2(ProfileForm, \"MCcOwrn4sH/cr7sA4xfp5NYDUuE=\");\n_c = ProfileForm;\nvar _c;\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"names":["useEffect","useState","ProfileForm","profile","updateProfile","email","userName","id","localWavelandUser","localStorage","getItem","wavelandUserObject","JSON","parse","users","setUsers","fetch","then","res","json","data","usersArray","userObjects","matchingUserObject","map","object","user","feedback","setFeedback","setTimeout","handleSaveButtonClick","event","preventDefault","method","headers","body","stringify","includes","evt","copy","target","value","clickEvent"],"sources":["/Users/charlesseals/workspace/WaveLand/waveland-capstone/src/components/profile/ProfileForm.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\n\nexport const ProfileForm = () => {\n    // TODO: Provide initial state for profile\n    const [profile, updateProfile] = useState({\n        email: \"\",\n        userName: \"\",\n        id: 0\n    })\n    \n    \n    const localWavelandUser = localStorage.getItem(\"waveland_user\")\n    const wavelandUserObject = JSON.parse(localWavelandUser)\n    const [users, setUsers] = useState()\n    \n    \n    // TODO: Get employee profile info from API and update state\n    useEffect(() => {\n        fetch(`http://localhost:8088/users?userId=${wavelandUserObject.id}`)\n        .then(res => res.json())\n        .then((data) => {\n            fetch(`http://localhost:8088/users`)\n            .then(res => res.json())\n            .then((usersArray) => {\n                setUsers(usersArray)\n            \n            const userObjects = data\n            const matchingUserObject = () => {\n                userObjects.map(\n                    (object) => {\n                        users.map(\n                            (user) => {\n                                if (object.id === user.id) {\n                                    return \n                                }\n                            }\n                        )\n                    }\n                )\n            }\n            updateProfile(matchingUserObject)\n        })\n    }, [])\n    \n    const [feedback, setFeedback] = useState(\"\")\n    useEffect(() => {\n        if (feedback !== \"\") {\n            // Clear feedback to make entire element disappear after 3 seconds\n            setTimeout(() => setFeedback(\"\"), 3000);\n        }\n    }, [feedback])\n\n    \n    const handleSaveButtonClick = (event) => {\n        event.preventDefault()\n\n        /*\n            TODO: Perform the PUT fetch() call here to update the profile.\n            Navigate user to home page when done.\n        */\n        return fetch(`http://localhost:8088/users/${profile.id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(profile)\n        })\n            .then(res => res.json())\n            .then(() => {\n                setFeedback(\"User profile successfully saved\")\n            })\n    }\n\n\n\n    return (\n        <>\n        <div className={`${feedback.includes(\"Error\") ? \"error\" : \"feedback\"} ${feedback === \"\" ? \"invisible\" : \"visible\"}`}>\n            {feedback}\n        </div>\n        <form className=\"profile\">\n            <h2 className=\"profile__title\">User Profile Information</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"userName\">Change username:</label>\n                    <input\n                        required autoFocus\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={profile.userName}\n                        onChange={\n                            (evt) => {\n                                // TODO: Update username property\n                                    const copy = {...profile}\n                                    copy.userName = evt.target.value\n                                    updateProfile(copy)\n                            }\n                        } />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Change email:</label>\n                    <input type=\"text\"\n                        className=\"form-control\"\n                        value={profile.email}\n                        onChange={\n                            (evt) => {\n                                // TODO: Update email property\n                                const copy = {...profile}\n                                    copy.email = evt.target.value\n                                    updateProfile(copy)\n                            }\n                        } />\n                </div>\n            </fieldset>\n            <button\n                onClick={(clickEvent) => handleSaveButtonClick(clickEvent)}\n                className=\"btn btn-primary\">\n                Save Updated Profile\n            </button>\n            \n        </form>\n        </>\n    )\n    }\n)}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}