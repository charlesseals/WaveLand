{"ast":null,"code":"var _jsxFileName = \"/Users/charlesseals/workspace/WaveLand/waveland-capstone/src/components/profile/ProfileForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProfileForm = () => {\n  _s();\n  // TODO: Provide initial state for profile\n  const [profile, updateProfile] = useState({});\n  const localWavelandUser = localStorage.getItem(\"waveland_user\");\n  const wavelandUserObject = JSON.parse(localWavelandUser);\n\n  // TODO: Get employee profile info from API and update state\n  useEffect(() => {\n    fetch(`http://localhost:8088/users?id=${wavelandUserObject.id}`).then(res => res.json()).then(data => {\n      const userObjects = data[0];\n      updateProfile(userObjects);\n    });\n  }, []);\n  const [feedback, setFeedback] = useState(\"\");\n  useEffect(() => {\n    if (feedback !== \"\") {\n      // Clear feedback to make entire element disappear after 3 seconds\n      setTimeout(() => setFeedback(\"\"), 3000);\n    }\n  }, [feedback]);\n  const handleSaveButtonClick = event => {\n    event.preventDefault();\n\n    /*\n        TODO: Perform the PUT fetch() call here to update the profile.\n        Navigate user to home page when done.\n    */\n    return fetch(`http://localhost:8088/users/${profile.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(profile)\n    }).then(res => res.json()).then(() => {\n      setFeedback(\"User profile successfully saved\");\n    });\n  };\n  console.log(profile.userName);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${feedback.includes(\"Error\") ? \"error\" : \"feedback\"} ${feedback === \"\" ? \"invisible\" : \"visible\"}`,\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"profile__title\",\n        children: \"User Profile Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"userName\",\n            children: \"Change username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            autoFocus: true,\n            type: \"text\",\n            className: \"form-control\",\n            value: profile.userName,\n            onChange: evt => {\n              // TODO: Update username property\n              const copy = {\n                ...profile\n              };\n              copy.userName = evt.target.value;\n              updateProfile(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Change email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: profile.email,\n            onChange: evt => {\n              // TODO: Update email property\n              const copy = {\n                ...profile\n              };\n              copy.email = evt.target.value;\n              updateProfile(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickEvent => handleSaveButtonClick(clickEvent),\n        className: \"btn btn-primary\",\n        children: \"Save Updated Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ProfileForm, \"ItbSEkpR86sbNE3MhZixStAoi/4=\");\n_c = ProfileForm;\nvar _c;\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"names":["useEffect","useState","ProfileForm","profile","updateProfile","localWavelandUser","localStorage","getItem","wavelandUserObject","JSON","parse","fetch","id","then","res","json","data","userObjects","feedback","setFeedback","setTimeout","handleSaveButtonClick","event","preventDefault","method","headers","body","stringify","console","log","userName","includes","evt","copy","target","value","email","clickEvent"],"sources":["/Users/charlesseals/workspace/WaveLand/waveland-capstone/src/components/profile/ProfileForm.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\n\n\nexport const ProfileForm = () => {\n    // TODO: Provide initial state for profile\n    const [profile, updateProfile] = useState({\n    })\n    \n    \n    const localWavelandUser = localStorage.getItem(\"waveland_user\")\n    const wavelandUserObject = JSON.parse(localWavelandUser)\n    \n    // TODO: Get employee profile info from API and update state\n    useEffect(() => {\n        fetch(`http://localhost:8088/users?id=${wavelandUserObject.id}`)\n        .then(res => res.json())\n        .then((data) => {\n            const userObjects = data[0]\n                updateProfile(userObjects)\n            }  \n        )\n        }, [])\n    \n    const [feedback, setFeedback] = useState(\"\")\n    useEffect(() => {\n        if (feedback !== \"\") {\n            // Clear feedback to make entire element disappear after 3 seconds\n            setTimeout(() => setFeedback(\"\"), 3000);\n        }\n    }, [feedback])\n\n    \n    const handleSaveButtonClick = (event) => {\n        event.preventDefault()\n\n        /*\n            TODO: Perform the PUT fetch() call here to update the profile.\n            Navigate user to home page when done.\n        */\n        return fetch(`http://localhost:8088/users/${profile.id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(profile)\n        })\n            .then(res => res.json())\n            .then(() => {\n                setFeedback(\"User profile successfully saved\")\n            })\n    }\n\n\n\n    console.log(profile.userName)\n    return (\n        <>\n        <div className={`${feedback.includes(\"Error\") ? \"error\" : \"feedback\"} ${feedback === \"\" ? \"invisible\" : \"visible\"}`}>\n            {feedback}\n        </div>\n        <form className=\"profile\">\n            <h2 className=\"profile__title\">User Profile Information</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"userName\">Change username:</label>\n                    <input\n                        required autoFocus\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={profile.userName}\n                        onChange={\n                            (evt) => {\n                                // TODO: Update username property\n                                    const copy = {...profile}\n                                    copy.userName = evt.target.value\n                                    updateProfile(copy)\n                            }\n                        } />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Change email:</label>\n                    <input type=\"text\"\n                        className=\"form-control\"\n                        value={profile.email}\n                        onChange={\n                            (evt) => {\n                                // TODO: Update email property\n                                const copy = {...profile}\n                                    copy.email = evt.target.value\n                                    updateProfile(copy)\n                            }\n                        } />\n                </div>\n            </fieldset>\n            <button\n                onClick={(clickEvent) => handleSaveButtonClick(clickEvent)}\n                className=\"btn btn-primary\">\n                Save Updated Profile\n            </button>\n            \n        </form>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}