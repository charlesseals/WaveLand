{"ast":null,"code":"var _jsxFileName = \"/Users/charlesseals/workspace/WaveLand/waveland-capstone/src/components/newArtist/NewArtistForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { CountrySelect } from \"./CountrySelect\";\nimport { GenreSelect } from \"./GenreSelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NewArtistForm = () => {\n  _s();\n  // TODO: Provide initial state for profile\n  // const [completeArtist, setCompleteArtist] = useState({})\n  const [newArtistObj, setNewArtistObj] = useState({});\n  const [genres, setGenres] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [countryObj, setCountryObj] = useState(0);\n  // const [artists, setArtists] = useState([])\n  // const [filteredArtists, setFiltered] = useState([])\n  // const [favorites, setFavorites] = useState({})\n  // const [newFavorite, setNewFavorite] = useState(false)\n  // const navigate = useNavigate()\n\n  const localWavelandUser = localStorage.getItem(\"waveland_user\");\n  const wavelandUserObject = JSON.parse(localWavelandUser);\n  console.log(countries);\n\n  // useEffect(() => {\n  //     fetch(`http://localhost:8088/users?id=${wavelandUserObject.id}`)\n  //     .then(res => res.json())\n  //     .then((data) => {\n  //         const userObjects = data[0]\n  //             updateNewArtist(userObjects)\n  //         }  \n  //     )\n  //     }, [])\n\n  useEffect(() => {\n    fetch(`http://localhost:8088/countries`).then(res => res.json()).then(data => {\n      const countryObjects = data;\n      setCountries(countryObjects);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`http://localhost:8088/genre`).then(res => res.json()).then(data => {\n      const genreObjects = data;\n      setGenres(genreObjects);\n    });\n  }, []);\n  const [feedback, setFeedback] = useState(\"\");\n  useEffect(() => {\n    if (feedback !== \"\") {\n      // Clear feedback to make entire element disappear after 3 seconds\n      setTimeout(() => setFeedback(\"\"), 3000);\n    }\n  }, [feedback]);\n  const handleSaveButtonClick = event => {\n    event.preventDefault();\n\n    // const createdArtist = {\n    //     countries.\n    // }\n\n    /*\n        TODO: Perform the PUT fetch() call here to update the profile.\n        Navigate user to home page when done.\n    */\n    return fetch(`http://localhost:8088/artists`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newArtistObj)\n    }).then(res => res.json()).then(() => {\n      setFeedback(\"New Artist Successfully Saved\");\n    });\n  };\n\n  // console.log(newArtist.name)\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${feedback.includes(\"Error\") ? \"error\" : \"feedback\"} ${feedback === \"\" ? \"invisible\" : \"visible\"}`,\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newArtist\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"newArtist__title\",\n        children: \"Add A New Artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newArtistName\",\n            children: \"Artist Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            autoFocus: true,\n            type: \"text\",\n            className: \"form-control\",\n            value: newArtistObj.name,\n            onChange: evt => {\n              // TODO: Update username property\n              const copy = {\n                ...newArtistObj\n              };\n              copy.name = evt.target.value;\n              setNewArtistObj(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newArtistImage\",\n            children: \"Add Image URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: newArtistObj.image,\n            onChange: evt => {\n              // TODO: Update email property\n              const copy = {\n                ...newArtistObj\n              };\n              copy.image = evt.target.value;\n              setNewArtistObj(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: event => {\n            const copy = {\n              ...newArtistObj\n            };\n            copy.countryId = parseInt(event.target.value);\n            setNewArtistObj(copy);\n          },\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 0,\n            children: \"Select Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: country.id,\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 49\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: event => {\n            const copy = {\n              ...newArtistObj\n            };\n            copy.genreId = parseInt(event.target.value);\n            setNewArtistObj(copy);\n          },\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 0,\n            children: \"Select Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre.id,\n            children: genre.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 44\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickEvent => handleSaveButtonClick(clickEvent),\n        className: \"btn btn-primary\",\n        children: \"Save New Artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(NewArtistForm, \"6fGMyjbse8bdevWzZAx/xE3J3QQ=\");\n_c = NewArtistForm;\nvar _c;\n$RefreshReg$(_c, \"NewArtistForm\");","map":{"version":3,"names":["useEffect","useState","CountrySelect","GenreSelect","NewArtistForm","newArtistObj","setNewArtistObj","genres","setGenres","countries","setCountries","countryObj","setCountryObj","localWavelandUser","localStorage","getItem","wavelandUserObject","JSON","parse","console","log","fetch","then","res","json","data","countryObjects","genreObjects","feedback","setFeedback","setTimeout","handleSaveButtonClick","event","preventDefault","method","headers","body","stringify","includes","name","evt","copy","target","value","image","countryId","parseInt","map","country","id","genreId","genre","clickEvent"],"sources":["/Users/charlesseals/workspace/WaveLand/waveland-capstone/src/components/newArtist/NewArtistForm.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { CountrySelect } from \"./CountrySelect\"\nimport { GenreSelect } from \"./GenreSelect\"\n\n\nexport const NewArtistForm = () => {\n    // TODO: Provide initial state for profile\n    // const [completeArtist, setCompleteArtist] = useState({})\n    const [newArtistObj, setNewArtistObj] = useState({})\n    const [genres, setGenres] = useState([])\n    const [countries, setCountries] = useState([])\n    const [countryObj, setCountryObj] = useState(0)\n    // const [artists, setArtists] = useState([])\n    // const [filteredArtists, setFiltered] = useState([])\n    // const [favorites, setFavorites] = useState({})\n    // const [newFavorite, setNewFavorite] = useState(false)\n    // const navigate = useNavigate()\n    \n\n    const localWavelandUser = localStorage.getItem(\"waveland_user\")\n    const wavelandUserObject = JSON.parse(localWavelandUser)\n\n    console.log(countries)\n    \n        \n\n    // useEffect(() => {\n    //     fetch(`http://localhost:8088/users?id=${wavelandUserObject.id}`)\n    //     .then(res => res.json())\n    //     .then((data) => {\n    //         const userObjects = data[0]\n    //             updateNewArtist(userObjects)\n    //         }  \n    //     )\n    //     }, [])\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/countries`)\n        .then(res => res.json())\n        .then((data) => {\n            const countryObjects = data\n                setCountries(countryObjects)\n            }  \n        )\n        }, [])\n    \n    useEffect(() => {\n        fetch(`http://localhost:8088/genre`)\n        .then(res => res.json())\n        .then((data) => {\n            const genreObjects = data\n                setGenres(genreObjects)\n            }  \n        )\n        }, [])\n    \n\n    \n    const [feedback, setFeedback] = useState(\"\")\n    useEffect(() => {\n        if (feedback !== \"\") {\n            // Clear feedback to make entire element disappear after 3 seconds\n            setTimeout(() => setFeedback(\"\"), 3000);\n        }\n    }, [feedback])\n\n    \n    const handleSaveButtonClick = (event) => {\n        event.preventDefault()\n\n\n        // const createdArtist = {\n        //     countries.\n        // }\n\n\n\n        /*\n            TODO: Perform the PUT fetch() call here to update the profile.\n            Navigate user to home page when done.\n        */\n        return fetch(`http://localhost:8088/artists`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newArtistObj)\n        })\n            .then(res => res.json())\n            .then(() => {\n                setFeedback(\"New Artist Successfully Saved\")\n            })\n    }\n\n\n\n    // console.log(newArtist.name)\n    return (\n        <>\n        <div className={`${feedback.includes(\"Error\") ? \"error\" : \"feedback\"} ${feedback === \"\" ? \"invisible\" : \"visible\"}`}>\n            {feedback}\n        </div>\n        <form className=\"newArtist\">\n            <h3 className=\"newArtist__title\">Add A New Artist</h3>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"newArtistName\">Artist Name:</label>\n                    <input\n                        required autoFocus\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={newArtistObj.name}\n                        onChange={\n                            (evt) => {\n                                // TODO: Update username property\n                                    const copy = {...newArtistObj}\n                                    copy.name = evt.target.value\n                                    setNewArtistObj(copy)\n                            }\n                        } />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"newArtistImage\">Add Image URL:</label>\n                    <input type=\"text\"\n                        className=\"form-control\"\n                        value={newArtistObj.image}\n                        onChange={\n                            (evt) => {\n                                // TODO: Update email property\n                                const copy = {...newArtistObj}\n                                    copy.image = evt.target.value\n                                    setNewArtistObj(copy)\n                            }\n                        } />\n                </div>\n            </fieldset>\n            <aside>\n                <select onChange={\n                    (event) => {\n                        const copy = { ...newArtistObj }\n                        copy.countryId = parseInt(event.target.value)\n                        setNewArtistObj(copy)\n                    }\n                } className=\"form-group\">\n                    <option value={0}>Select Country</option>\n                    {countries.map((country) => <option value={country.id}>{country.name}</option>)}\n                </select>\n            </aside>\n            <aside>\n                <select onChange={\n                    (event) => {\n                        const copy = { ...newArtistObj }\n                        copy.genreId = parseInt(event.target.value)\n                        setNewArtistObj(copy)\n                    }\n                } className=\"form-group\">\n                    <option value={0}>Select Genre</option>\n                    {genres.map((genre) => <option value={genre.id}>{genre.name}</option>)}\n                </select>\n            </aside>\n            <button\n                onClick={(clickEvent) => handleSaveButtonClick(clickEvent)}\n                className=\"btn btn-primary\">\n                Save New Artist\n            </button>\n            \n        </form>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}