{"ast":null,"code":"var _jsxFileName = \"/Users/charlesseals/workspace/honey-rae-repairs/src/components/tickets/TicketList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Tickets.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TicketList = _ref => {\n  _s();\n  let {\n    searchTermState\n  } = _ref;\n  const [tickets, setTickets] = useState([]);\n  const [filteredTickets, setFiltered] = useState([]);\n  const [emergency, setEmergency] = useState(false);\n  const [openOnly, updateOpenOnly] = useState(false);\n  const navigate = useNavigate();\n  const localHoneyUser = localStorage.getItem(\"honey_user\");\n  const honeyUserObject = JSON.parse(localHoneyUser);\n  useEffect();\n  useEffect(() => {\n    if (emergency) {\n      const emergencyTickets = tickets.filter(ticket => ticket.emergency === true);\n      setFiltered(emergencyTickets);\n    } else {\n      setFiltered(tickets);\n    }\n  }, [emergency]);\n  useEffect(() => {\n    fetch(`http://localhost:8088/serviceTickets`).then(res => res.json()).then(ticketArray => {\n      setTickets(ticketArray);\n    });\n  }, [] // When this array is empty, you are observing initial component state\n  );\n\n  useEffect(() => {\n    if (honeyUserObject.staff) {\n      // For Employees\n      setFiltered(tickets);\n    } else {\n      // For Customers\n      const myTickets = tickets.filter(ticket => ticket.userId === honeyUserObject.id);\n      setFiltered(myTickets);\n    }\n  }, [tickets]);\n  useEffect(() => {\n    if (openOnly) {\n      const openTicketArray = tickets.filter(ticket => {\n        return ticket.userId === honeyUserObject.id && ticket.dateCompleted === \"\";\n      });\n      setFiltered(openTicketArray);\n    } else {\n      const myTickets = tickets.filter(ticket => ticket.userId === honeyUserObject.id);\n      setFiltered(myTickets);\n    }\n  }, [openOnly]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [honeyUserObject.staff ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setEmergency(true);\n        },\n        children: \"Emergency Only\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setEmergency(false);\n        },\n        children: \"Show All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/ticket/create\"),\n        children: \"Create Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateOpenOnly(true),\n        children: \"Open Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateOpenOnly(false),\n        children: \"All My Tickets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of Tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"tickets\",\n      children: filteredTickets.map(ticket => {\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"ticket\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            children: ticket.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n            children: [\"Emergency: \", ticket.emergency ? \"ðŸ§¨\" : \"No\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)]\n        }, `ticket--${ticket.id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(TicketList, \"fv1gaRVOWhA9pfjEhmTUIwB9l44=\", false, function () {\n  return [useNavigate];\n});\n_c = TicketList;\nvar _c;\n$RefreshReg$(_c, \"TicketList\");","map":{"version":3,"names":["useEffect","useState","useNavigate","TicketList","searchTermState","tickets","setTickets","filteredTickets","setFiltered","emergency","setEmergency","openOnly","updateOpenOnly","navigate","localHoneyUser","localStorage","getItem","honeyUserObject","JSON","parse","emergencyTickets","filter","ticket","fetch","then","res","json","ticketArray","staff","myTickets","userId","id","openTicketArray","dateCompleted","map","description"],"sources":["/Users/charlesseals/workspace/honey-rae-repairs/src/components/tickets/TicketList.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Tickets.css\"\n\nexport const TicketList = ({ searchTermState }) => {\n    const [tickets, setTickets] = useState([])\n    const [filteredTickets, setFiltered] = useState([])\n    const [emergency, setEmergency] = useState(false)\n    const [openOnly, updateOpenOnly] = useState(false)\n    const navigate = useNavigate()\n\n    const localHoneyUser = localStorage.getItem(\"honey_user\")\n    const honeyUserObject = JSON.parse(localHoneyUser)\n\n    useEffect(\n        \n    )\n\n    useEffect(\n        () => {\n            if (emergency) {\n                const emergencyTickets = tickets.filter(ticket => ticket.emergency === true)\n                setFiltered(emergencyTickets)\n            }\n            else {\n                setFiltered(tickets\n                )\n            }\n        },\n        [emergency]\n    )\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/serviceTickets`)\n            .then(res => res.json())\n            .then((ticketArray) => {\n                setTickets(ticketArray)\n            })\n        },\n        [] // When this array is empty, you are observing initial component state\n    )\n\n    useEffect(\n        () => {\n            if (honeyUserObject.staff) {\n                // For Employees\n                setFiltered(tickets)\n            }\n            else {\n                // For Customers\n                const myTickets = tickets.filter(ticket => ticket.userId === honeyUserObject.id)\n                setFiltered(myTickets)\n            }\n        },\n        [tickets]\n    )\n\n    useEffect(\n        () => {\n            if (openOnly) {\n            const openTicketArray = tickets.filter(ticket => {\n                return ticket.userId === honeyUserObject.id && ticket.dateCompleted === \"\"\n            })\n            setFiltered(openTicketArray)\n        }\n        else {\n            const myTickets = tickets.filter(ticket => ticket.userId === honeyUserObject.id)\n            setFiltered(myTickets)\n        }\n        },\n        [ openOnly ]\n    )\n\n\n    return <>\n    {\n        honeyUserObject.staff\n        ? <>\n            <button onClick={ () => { setEmergency(true) } }>Emergency Only</button>\n            <button onClick={ () => { setEmergency(false) } }>Show All</button>\n        </>\n        : <>\n            <button onClick={() => navigate(\"/ticket/create\")}>Create Ticket</button>\n            <button onClick={() => updateOpenOnly(true)}>Open Ticket</button>\n            <button onClick={() => updateOpenOnly(false)}>All My Tickets</button>\n        </>\n    }\n\n        <h2>List of Tickets</h2>\n\n        <article className=\"tickets\">\n            {\n                filteredTickets.map(\n                    (ticket) => {\n                        return <section className=\"ticket\" key={`ticket--${ticket.id}`}>\n                            <header>{ticket.description}</header>\n                            <footer>Emergency: {ticket.emergency ? \"ðŸ§¨\" : \"No\"}</footer>\n                        </section>\n                    }\n                )\n            }\n        </article>\n    </>\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}