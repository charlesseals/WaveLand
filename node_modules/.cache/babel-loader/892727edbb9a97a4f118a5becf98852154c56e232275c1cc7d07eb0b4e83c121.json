{"ast":null,"code":"var _jsxFileName = \"/Users/charlesseals/workspace/WaveLand/waveland-capstone/src/components/newArtist/NewArtistForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { GenreSelect } from \"./GenreSelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NewArtistForm = () => {\n  _s();\n  // TODO: Provide initial state for profile\n  const [completeArtist, setCompleteArtist] = useState({});\n  const [newArtist, updateNewArtist] = useState({});\n  const [genres, setGenres] = useState({});\n  const [countries, setCountries] = useState({});\n  // const [artists, setArtists] = useState([])\n  // const [filteredArtists, setFiltered] = useState([])\n  // const [favorites, setFavorites] = useState({})\n  // const [newFavorite, setNewFavorite] = useState(false)\n  // const navigate = useNavigate()\n\n  const localWavelandUser = localStorage.getItem(\"waveland_user\");\n  const wavelandUserObject = JSON.parse(localWavelandUser);\n  useEffect(() => {\n    fetch(`http://localhost:8088/users?id=${wavelandUserObject.id}`).then(res => res.json()).then(data => {\n      const userObjects = data[0];\n      updateNewArtist(userObjects);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`http://localhost:8088/countries`).then(res => res.json()).then(data => {\n      const countryObjects = data;\n      setCountries(countryObjects);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`http://localhost:8088/genre`).then(res => res.json()).then(data => {\n      const genreObjects = data;\n      setGenres(genreObjects);\n    });\n  }, []);\n  const [feedback, setFeedback] = useState(\"\");\n  useEffect(() => {\n    if (feedback !== \"\") {\n      // Clear feedback to make entire element disappear after 3 seconds\n      setTimeout(() => setFeedback(\"\"), 3000);\n    }\n  }, [feedback]);\n  const handleSaveButtonClick = event => {\n    event.preventDefault();\n\n    /*\n        TODO: Perform the PUT fetch() call here to update the profile.\n        Navigate user to home page when done.\n    */\n    return fetch(`http://localhost:8088/artists/${completeArtist.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(completeArtist)\n    }).then(res => res.json()).then(() => {\n      setFeedback(\"New Artist Successfully Saved\");\n    });\n  };\n  console.log(completeArtist.name);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${feedback.includes(\"Error\") ? \"error\" : \"feedback\"} ${feedback === \"\" ? \"invisible\" : \"visible\"}`,\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newArtist\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"newArtist__title\",\n        children: \"New Artist Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newArtistName\",\n            children: \"Add Artist Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            autoFocus: true,\n            type: \"text\",\n            className: \"form-control\",\n            value: newArtist.name,\n            onChange: evt => {\n              // TODO: Update username property\n              const copy = {\n                ...newArtist\n              };\n              copy.userName = evt.target.value;\n              updateNewArtist(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newArtistImage\",\n            children: \"Add Image URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: newArtist.image,\n            onChange: evt => {\n              // TODO: Update email property\n              const copy = {\n                ...newArtist\n              };\n              copy.email = evt.target.value;\n              updateNewArtist(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: event => {\n          const copy = {\n            ...country\n          };\n          copy.name = event.target.value;\n          setCountries(copy);\n        },\n        className: \"country_select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 0,\n          children: \"Select Artist Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), countries.map(country => {\n          var _genre;\n          return /*#__PURE__*/_jsxDEV(CountrySelect, {\n            genre: genre\n          }, `genre--${(_genre = genre) === null || _genre === void 0 ? void 0 : _genre.id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 45\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: event => {\n          const copy = {\n            ...genre\n          };\n          copy.name = event.target.value;\n          setGenres(copy);\n        },\n        className: \"genre_select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 0,\n          children: \"Select Artist Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(GenreSelect, {\n          genre: genre\n        }, `genre--${genre === null || genre === void 0 ? void 0 : genre.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 40\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickEvent => handleSaveButtonClick(clickEvent),\n        className: \"btn btn-primary\",\n        children: \"Save New Artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(NewArtistForm, \"0nr5mWPEBquapHWlrm7MZEbjW/4=\");\n_c = NewArtistForm;\nvar _c;\n$RefreshReg$(_c, \"NewArtistForm\");","map":{"version":3,"names":["useEffect","useState","GenreSelect","NewArtistForm","completeArtist","setCompleteArtist","newArtist","updateNewArtist","genres","setGenres","countries","setCountries","localWavelandUser","localStorage","getItem","wavelandUserObject","JSON","parse","fetch","id","then","res","json","data","userObjects","countryObjects","genreObjects","feedback","setFeedback","setTimeout","handleSaveButtonClick","event","preventDefault","method","headers","body","stringify","console","log","name","includes","evt","copy","userName","target","value","image","email","country","map","genre","clickEvent"],"sources":["/Users/charlesseals/workspace/WaveLand/waveland-capstone/src/components/newArtist/NewArtistForm.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { GenreSelect } from \"./GenreSelect\"\n\n\nexport const NewArtistForm = () => {\n    // TODO: Provide initial state for profile\n    const [completeArtist, setCompleteArtist] = useState({})\n    const [newArtist, updateNewArtist] = useState({})\n    const [genres, setGenres] = useState({})\n    const [countries, setCountries] = useState({})\n    // const [artists, setArtists] = useState([])\n    // const [filteredArtists, setFiltered] = useState([])\n    // const [favorites, setFavorites] = useState({})\n    // const [newFavorite, setNewFavorite] = useState(false)\n    // const navigate = useNavigate()\n    \n    const localWavelandUser = localStorage.getItem(\"waveland_user\")\n    const wavelandUserObject = JSON.parse(localWavelandUser)\n    \n        \n\n    useEffect(() => {\n        fetch(`http://localhost:8088/users?id=${wavelandUserObject.id}`)\n        .then(res => res.json())\n        .then((data) => {\n            const userObjects = data[0]\n                updateNewArtist(userObjects)\n            }  \n        )\n        }, [])\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/countries`)\n        .then(res => res.json())\n        .then((data) => {\n            const countryObjects = data\n                setCountries(countryObjects)\n            }  \n        )\n        }, [])\n    \n    useEffect(() => {\n        fetch(`http://localhost:8088/genre`)\n        .then(res => res.json())\n        .then((data) => {\n            const genreObjects = data\n                setGenres(genreObjects)\n            }  \n        )\n        }, [])\n    \n\n    \n    const [feedback, setFeedback] = useState(\"\")\n    useEffect(() => {\n        if (feedback !== \"\") {\n            // Clear feedback to make entire element disappear after 3 seconds\n            setTimeout(() => setFeedback(\"\"), 3000);\n        }\n    }, [feedback])\n\n    \n    const handleSaveButtonClick = (event) => {\n        event.preventDefault()\n\n        /*\n            TODO: Perform the PUT fetch() call here to update the profile.\n            Navigate user to home page when done.\n        */\n        return fetch(`http://localhost:8088/artists/${completeArtist.id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(completeArtist)\n        })\n            .then(res => res.json())\n            .then(() => {\n                setFeedback(\"New Artist Successfully Saved\")\n            })\n    }\n\n\n\n    console.log(completeArtist.name)\n    return (\n        <>\n        <div className={`${feedback.includes(\"Error\") ? \"error\" : \"feedback\"} ${feedback === \"\" ? \"invisible\" : \"visible\"}`}>\n            {feedback}\n        </div>\n        <form className=\"newArtist\">\n            <h2 className=\"newArtist__title\">New Artist Information</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"newArtistName\">Add Artist Name:</label>\n                    <input\n                        required autoFocus\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={newArtist.name}\n                        onChange={\n                            (evt) => {\n                                // TODO: Update username property\n                                    const copy = {...newArtist}\n                                    copy.userName = evt.target.value\n                                    updateNewArtist(copy)\n                            }\n                        } />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"newArtistImage\">Add Image URL:</label>\n                    <input type=\"text\"\n                        className=\"form-control\"\n                        value={newArtist.image}\n                        onChange={\n                            (evt) => {\n                                // TODO: Update email property\n                                const copy = {...newArtist}\n                                    copy.email = evt.target.value\n                                    updateNewArtist(copy)\n                            }\n                        } />\n                </div>\n            </fieldset>\n            <select onChange={\n                (event) => {\n                    const copy = { ...country }\n                    copy.name = event.target.value\n                    setCountries(copy)\n                }\n            } className=\"country_select\">\n                <option value={0}>Select Artist Country</option>\n                {countries.map((country) => <CountrySelect key={`genre--${genre?.id}`} genre={genre} />)}\n            </select>\n\n            <select onChange={\n                (event) => {\n                    const copy = { ...genre }\n                    copy.name = event.target.value\n                    setGenres(copy)\n                }\n            } className=\"genre_select\">\n                <option value={0}>Select Artist Genre</option>\n                {genres.map((genre) => <GenreSelect key={`genre--${genre?.id}`} genre={genre} />)}\n            </select>\n            <button\n                onClick={(clickEvent) => handleSaveButtonClick(clickEvent)}\n                className=\"btn btn-primary\">\n                Save New Artist\n            </button>\n            \n        </form>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}