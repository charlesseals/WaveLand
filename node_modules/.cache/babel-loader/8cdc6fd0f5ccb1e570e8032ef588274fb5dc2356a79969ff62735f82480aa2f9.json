{"ast":null,"code":"var _jsxFileName = \"/Users/charlesseals/workspace/WaveLand/waveland-capstone/src/components/newArtist/NewArtistForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { CountrySelect } from \"./CountrySelect\";\nimport { GenreSelect } from \"./GenreSelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NewArtistForm = () => {\n  _s();\n  // TODO: Provide initial state for profile\n  const [completeArtist, setCompleteArtist] = useState({});\n  const [newArtist, updateNewArtist] = useState({});\n  const [genres, setGenres] = useState([]);\n  const [countries, setCountries] = useState([]);\n  // const [artists, setArtists] = useState([])\n  // const [filteredArtists, setFiltered] = useState([])\n  // const [favorites, setFavorites] = useState({})\n  // const [newFavorite, setNewFavorite] = useState(false)\n  // const navigate = useNavigate()\n\n  const localWavelandUser = localStorage.getItem(\"waveland_user\");\n  const wavelandUserObject = JSON.parse(localWavelandUser);\n  console.log(countries);\n  useEffect(() => {\n    fetch(`http://localhost:8088/users?id=${wavelandUserObject.id}`).then(res => res.json()).then(data => {\n      const userObjects = data[0];\n      updateNewArtist(userObjects);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`http://localhost:8088/countries`).then(res => res.json()).then(data => {\n      const countryObjects = data;\n      setCountries(countryObjects);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`http://localhost:8088/genre`).then(res => res.json()).then(data => {\n      const genreObjects = data;\n      setGenres(genreObjects);\n    });\n  }, []);\n  const [feedback, setFeedback] = useState(\"\");\n  useEffect(() => {\n    if (feedback !== \"\") {\n      // Clear feedback to make entire element disappear after 3 seconds\n      setTimeout(() => setFeedback(\"\"), 3000);\n    }\n  }, [feedback]);\n  const handleSaveButtonClick = event => {\n    event.preventDefault();\n    const createdArtist = {};\n\n    /*\n        TODO: Perform the PUT fetch() call here to update the profile.\n        Navigate user to home page when done.\n    */\n    return fetch(`http://localhost:8088/artists/${newArtist}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newArtist)\n    }).then(res => res.json()).then(() => {\n      setFeedback(\"New Artist Successfully Saved\");\n    });\n  };\n\n  // console.log(newArtist.name)\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${feedback.includes(\"Error\") ? \"error\" : \"feedback\"} ${feedback === \"\" ? \"invisible\" : \"visible\"}`,\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newArtist\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"newArtist__title\",\n        children: \"Add A New Artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newArtistName\",\n            children: \"Artist Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            autoFocus: true,\n            type: \"text\",\n            className: \"form-control\",\n            value: newArtist.name,\n            onChange: evt => {\n              // TODO: Update username property\n              const copy = {\n                ...newArtist\n              };\n              copy.name = evt.target.value;\n              updateNewArtist(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newArtistImage\",\n            children: \"Add Image URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: newArtist.image,\n            onChange: evt => {\n              // TODO: Update email property\n              const copy = {\n                ...newArtist\n              };\n              copy.image = evt.target.value;\n              updateNewArtist(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: event => {\n            const copy = {\n              ...countries\n            };\n            copy.name = event.target.value;\n            setCountries(copy);\n          },\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 0,\n            children: \"Select Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), countries.map(country => /*#__PURE__*/_jsxDEV(CountrySelect, {\n            country: country\n          }, `country--${country === null || country === void 0 ? void 0 : country.id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 49\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: event => {\n            const copy = {\n              ...genres\n            };\n            copy.name = event.target.value;\n            setGenres(copy);\n          },\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 0,\n            children: \"Select Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(GenreSelect, {\n            genre: genre\n          }, `genre--${genre === null || genre === void 0 ? void 0 : genre.id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 44\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickEvent => handleSaveButtonClick(clickEvent),\n        className: \"btn btn-primary\",\n        children: \"Save New Artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(NewArtistForm, \"tA4lKTi7joBVoCnsZLAYq25NEV0=\");\n_c = NewArtistForm;\nvar _c;\n$RefreshReg$(_c, \"NewArtistForm\");","map":{"version":3,"names":["useEffect","useState","CountrySelect","GenreSelect","NewArtistForm","completeArtist","setCompleteArtist","newArtist","updateNewArtist","genres","setGenres","countries","setCountries","localWavelandUser","localStorage","getItem","wavelandUserObject","JSON","parse","console","log","fetch","id","then","res","json","data","userObjects","countryObjects","genreObjects","feedback","setFeedback","setTimeout","handleSaveButtonClick","event","preventDefault","createdArtist","method","headers","body","stringify","includes","name","evt","copy","target","value","image","map","country","genre","clickEvent"],"sources":["/Users/charlesseals/workspace/WaveLand/waveland-capstone/src/components/newArtist/NewArtistForm.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { CountrySelect } from \"./CountrySelect\"\nimport { GenreSelect } from \"./GenreSelect\"\n\n\nexport const NewArtistForm = () => {\n    // TODO: Provide initial state for profile\n    const [completeArtist, setCompleteArtist] = useState({})\n    const [newArtist, updateNewArtist] = useState({})\n    const [genres, setGenres] = useState([])\n    const [countries, setCountries] = useState([])\n    // const [artists, setArtists] = useState([])\n    // const [filteredArtists, setFiltered] = useState([])\n    // const [favorites, setFavorites] = useState({})\n    // const [newFavorite, setNewFavorite] = useState(false)\n    // const navigate = useNavigate()\n    \n    const localWavelandUser = localStorage.getItem(\"waveland_user\")\n    const wavelandUserObject = JSON.parse(localWavelandUser)\n\n    console.log(countries)\n    \n        \n\n    useEffect(() => {\n        fetch(`http://localhost:8088/users?id=${wavelandUserObject.id}`)\n        .then(res => res.json())\n        .then((data) => {\n            const userObjects = data[0]\n                updateNewArtist(userObjects)\n            }  \n        )\n        }, [])\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/countries`)\n        .then(res => res.json())\n        .then((data) => {\n            const countryObjects = data\n                setCountries(countryObjects)\n            }  \n        )\n        }, [])\n    \n    useEffect(() => {\n        fetch(`http://localhost:8088/genre`)\n        .then(res => res.json())\n        .then((data) => {\n            const genreObjects = data\n                setGenres(genreObjects)\n            }  \n        )\n        }, [])\n    \n\n    \n    const [feedback, setFeedback] = useState(\"\")\n    useEffect(() => {\n        if (feedback !== \"\") {\n            // Clear feedback to make entire element disappear after 3 seconds\n            setTimeout(() => setFeedback(\"\"), 3000);\n        }\n    }, [feedback])\n\n    \n    const handleSaveButtonClick = (event) => {\n        event.preventDefault()\n\n\n        const createdArtist = {}\n\n\n\n        /*\n            TODO: Perform the PUT fetch() call here to update the profile.\n            Navigate user to home page when done.\n        */\n        return fetch(`http://localhost:8088/artists/${newArtist}`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newArtist)\n        })\n            .then(res => res.json())\n            .then(() => {\n                setFeedback(\"New Artist Successfully Saved\")\n            })\n    }\n\n\n\n    // console.log(newArtist.name)\n    return (\n        <>\n        <div className={`${feedback.includes(\"Error\") ? \"error\" : \"feedback\"} ${feedback === \"\" ? \"invisible\" : \"visible\"}`}>\n            {feedback}\n        </div>\n        <form className=\"newArtist\">\n            <h2 className=\"newArtist__title\">Add A New Artist</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"newArtistName\">Artist Name:</label>\n                    <input\n                        required autoFocus\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={newArtist.name}\n                        onChange={\n                            (evt) => {\n                                // TODO: Update username property\n                                    const copy = {...newArtist}\n                                    copy.name = evt.target.value\n                                    updateNewArtist(copy)\n                            }\n                        } />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"newArtistImage\">Add Image URL:</label>\n                    <input type=\"text\"\n                        className=\"form-control\"\n                        value={newArtist.image}\n                        onChange={\n                            (evt) => {\n                                // TODO: Update email property\n                                const copy = {...newArtist}\n                                    copy.image = evt.target.value\n                                    updateNewArtist(copy)\n                            }\n                        } />\n                </div>\n            </fieldset>\n            <aside>\n                <select onChange={\n                    (event) => {\n                        const copy = { ...countries }\n                        copy.name = event.target.value\n                        setCountries(copy)\n                    }\n                } className=\"form-group\">\n                    <option value={0}>Select Country</option>\n                    {countries.map((country) => <CountrySelect key={`country--${country?.id}`} country={country} />)}\n                </select>\n            </aside>\n            <aside>\n                <select onChange={\n                    (event) => {\n                        const copy = { ...genres }\n                        copy.name = event.target.value\n                        setGenres(copy)\n                    }\n                } className=\"form-group\">\n                    <option value={0}>Select Genre</option>\n                    {genres.map((genre) => <GenreSelect key={`genre--${genre?.id}`} genre={genre} />)}\n                </select>\n            </aside>\n            <button\n                onClick={(clickEvent) => handleSaveButtonClick(clickEvent)}\n                className=\"btn btn-primary\">\n                Save New Artist\n            </button>\n            \n        </form>\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,WAAW,QAAQ,eAAe;AAAA;AAAA;AAG3C,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC/B;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACM,SAAS,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EACjD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C;EACA;EACA;EACA;EACA;;EAEA,MAAMY,iBAAiB,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;EAC/D,MAAMC,kBAAkB,GAAGC,IAAI,CAACC,KAAK,CAACL,iBAAiB,CAAC;EAExDM,OAAO,CAACC,GAAG,CAACT,SAAS,CAAC;EAItBX,SAAS,CAAC,MAAM;IACZqB,KAAK,CAAE,kCAAiCL,kBAAkB,CAACM,EAAG,EAAC,CAAC,CAC/DC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAEG,IAAI,IAAK;MACZ,MAAMC,WAAW,GAAGD,IAAI,CAAC,CAAC,CAAC;MACvBlB,eAAe,CAACmB,WAAW,CAAC;IAChC,CAAC,CACJ;EACD,CAAC,EAAE,EAAE,CAAC;EAEV3B,SAAS,CAAC,MAAM;IACZqB,KAAK,CAAE,iCAAgC,CAAC,CACvCE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAEG,IAAI,IAAK;MACZ,MAAME,cAAc,GAAGF,IAAI;MACvBd,YAAY,CAACgB,cAAc,CAAC;IAChC,CAAC,CACJ;EACD,CAAC,EAAE,EAAE,CAAC;EAEV5B,SAAS,CAAC,MAAM;IACZqB,KAAK,CAAE,6BAA4B,CAAC,CACnCE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAEG,IAAI,IAAK;MACZ,MAAMG,YAAY,GAAGH,IAAI;MACrBhB,SAAS,CAACmB,YAAY,CAAC;IAC3B,CAAC,CACJ;EACD,CAAC,EAAE,EAAE,CAAC;EAIV,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC5CD,SAAS,CAAC,MAAM;IACZ,IAAI8B,QAAQ,KAAK,EAAE,EAAE;MACjB;MACAE,UAAU,CAAC,MAAMD,WAAW,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IAC3C;EACJ,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAGd,MAAMG,qBAAqB,GAAIC,KAAK,IAAK;IACrCA,KAAK,CAACC,cAAc,EAAE;IAGtB,MAAMC,aAAa,GAAG,CAAC,CAAC;;IAIxB;AACR;AACA;AACA;IACQ,OAAOf,KAAK,CAAE,iCAAgCd,SAAU,EAAC,EAAE;MACvD8B,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEtB,IAAI,CAACuB,SAAS,CAACjC,SAAS;IAClC,CAAC,CAAC,CACGgB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAC,MAAM;MACRQ,WAAW,CAAC,+BAA+B,CAAC;IAChD,CAAC,CAAC;EACV,CAAC;;EAID;EACA,oBACI;IAAA,wBACA;MAAK,SAAS,EAAG,GAAED,QAAQ,CAACW,QAAQ,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,UAAW,IAAGX,QAAQ,KAAK,EAAE,GAAG,WAAW,GAAG,SAAU,EAAE;MAAA,UAC/GA;IAAQ;MAAA;MAAA;MAAA;IAAA,QACP,eACN;MAAM,SAAS,EAAC,WAAW;MAAA,wBACvB;QAAI,SAAS,EAAC,kBAAkB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB,eACtD;QAAA,uBACI;UAAK,SAAS,EAAC,YAAY;UAAA,wBACvB;YAAO,OAAO,EAAC,eAAe;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAqB,eACnD;YACI,QAAQ;YAAC,SAAS;YAClB,IAAI,EAAC,MAAM;YACX,SAAS,EAAC,cAAc;YACxB,KAAK,EAAEvB,SAAS,CAACmC,IAAK;YACtB,QAAQ,EACHC,GAAG,IAAK;cACL;cACI,MAAMC,IAAI,GAAG;gBAAC,GAAGrC;cAAS,CAAC;cAC3BqC,IAAI,CAACF,IAAI,GAAGC,GAAG,CAACE,MAAM,CAACC,KAAK;cAC5BtC,eAAe,CAACoC,IAAI,CAAC;YAC7B;UACH;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MACN;QAAA;QAAA;QAAA;MAAA,QACC,eACX;QAAA,uBACI;UAAK,SAAS,EAAC,YAAY;UAAA,wBACvB;YAAO,OAAO,EAAC,gBAAgB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAuB,eACtD;YAAO,IAAI,EAAC,MAAM;YACd,SAAS,EAAC,cAAc;YACxB,KAAK,EAAErC,SAAS,CAACwC,KAAM;YACvB,QAAQ,EACHJ,GAAG,IAAK;cACL;cACA,MAAMC,IAAI,GAAG;gBAAC,GAAGrC;cAAS,CAAC;cACvBqC,IAAI,CAACG,KAAK,GAAGJ,GAAG,CAACE,MAAM,CAACC,KAAK;cAC7BtC,eAAe,CAACoC,IAAI,CAAC;YAC7B;UACH;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MACN;QAAA;QAAA;QAAA;MAAA,QACC,eACX;QAAA,uBACI;UAAQ,QAAQ,EACXV,KAAK,IAAK;YACP,MAAMU,IAAI,GAAG;cAAE,GAAGjC;YAAU,CAAC;YAC7BiC,IAAI,CAACF,IAAI,GAAGR,KAAK,CAACW,MAAM,CAACC,KAAK;YAC9BlC,YAAY,CAACgC,IAAI,CAAC;UACtB,CACH;UAAC,SAAS,EAAC,YAAY;UAAA,wBACpB;YAAQ,KAAK,EAAE,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAwB,EACxCjC,SAAS,CAACqC,GAAG,CAAEC,OAAO,iBAAK,QAAC,aAAa;YAAiC,OAAO,EAAEA;UAAQ,GAA3C,YAAWA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE3B,EAAG,EAAC;YAAA;YAAA;YAAA;UAAA,QAAsB,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA;MAC3F;QAAA;QAAA;QAAA;MAAA,QACL,eACR;QAAA,uBACI;UAAQ,QAAQ,EACXY,KAAK,IAAK;YACP,MAAMU,IAAI,GAAG;cAAE,GAAGnC;YAAO,CAAC;YAC1BmC,IAAI,CAACF,IAAI,GAAGR,KAAK,CAACW,MAAM,CAACC,KAAK;YAC9BpC,SAAS,CAACkC,IAAI,CAAC;UACnB,CACH;UAAC,SAAS,EAAC,YAAY;UAAA,wBACpB;YAAQ,KAAK,EAAE,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAsB,EACtCnC,MAAM,CAACuC,GAAG,CAAEE,KAAK,iBAAK,QAAC,WAAW;YAA6B,KAAK,EAAEA;UAAM,GAAnC,UAASA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAE5B,EAAG,EAAC;YAAA;YAAA;YAAA;UAAA,QAAkB,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA;MAC5E;QAAA;QAAA;QAAA;MAAA,QACL,eACR;QACI,OAAO,EAAG6B,UAAU,IAAKlB,qBAAqB,CAACkB,UAAU,CAAE;QAC3D,SAAS,EAAC,iBAAiB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEtB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEN;EAAA,gBACJ;AAEX,CAAC;AAAA,GAlKY/C,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}