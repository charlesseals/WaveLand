{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Artists.css\";\nexport const ArtistList = _ref => {\n  _s();\n  let {\n    searchTermState\n  } = _ref;\n  const [artists, setArtists] = useState([]);\n  const [filteredArtists, setFiltered] = useState([]);\n  const navigate = useNavigate();\n  const localWavelandUser = localStorage.getItem(\"waveland_user\");\n  const wavelandUserObject = JSON.parse(localWavelandUser);\n  useEffect(() => {\n    const searchedArtists = artists.filter(artist => {\n      return artist.name.toLowerCase().startsWith(searchTermState.toLowerCase());\n    });\n    setFiltered(searchedArtists);\n  }, [searchTermState]);\n  useEffect(() => {\n    fetch(`http://localhost:8088/artists`).then(res => res.json()).then(artistArray => {\n      setArtists(artistArray);\n    });\n  }, [] // When this array is empty, you are observing initial component state\n  );\n\n  //         <h2>List of Artists</h2>\n\n  //         <article className=\"artists\">\n  //             {\n  //                 filteredArtists.map(\n  //                     (artist) => {\n  //                         return <section className=\"artist\" key={`Artist--${artist.id}`}>\n  //                             <header>{artist.name}</header>\n  //                             <footer>Country of Origin: {artist.country.id ? \"ðŸ§¨\" : \"No\"}</footer>\n  //                         </section>\n  //                     }\n  //                 )\n  //             }\n  //         </article>\n  //     </>\n};\n_s(ArtistList, \"GEZgdqiD2wqs4Rpk23eEuHtKZsY=\", false, function () {\n  return [useNavigate];\n});\n_c = ArtistList;\nvar _c;\n$RefreshReg$(_c, \"ArtistList\");","map":{"version":3,"names":["useEffect","useState","useNavigate","ArtistList","searchTermState","artists","setArtists","filteredArtists","setFiltered","navigate","localWavelandUser","localStorage","getItem","wavelandUserObject","JSON","parse","searchedArtists","filter","artist","name","toLowerCase","startsWith","fetch","then","res","json","artistArray"],"sources":["/Users/charlesseals/workspace/WaveLand/waveland-capstone/src/components/artists/ArtistList.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Artists.css\"\n\nexport const ArtistList = ({ searchTermState }) => {\n    const [artists, setArtists] = useState([])\n    const [filteredArtists, setFiltered] = useState([])\n    const navigate = useNavigate()\n\n    const localWavelandUser = localStorage.getItem(\"waveland_user\")\n    const wavelandUserObject = JSON.parse(localWavelandUser)\n\n    useEffect(\n        () => {\n            const searchedArtists = artists.filter(artist => {\n                return artist.name.toLowerCase().startsWith(searchTermState.toLowerCase())\n            })\n            setFiltered(searchedArtists)\n        },\n        [ searchTermState ]\n    )\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/artists`)\n            .then(res => res.json())\n            .then((artistArray) => {\n                setArtists(artistArray)\n            })\n        },\n        [] // When this array is empty, you are observing initial component state\n    )\n\n\n\n//         <h2>List of Artists</h2>\n\n//         <article className=\"artists\">\n//             {\n//                 filteredArtists.map(\n//                     (artist) => {\n//                         return <section className=\"artist\" key={`Artist--${artist.id}`}>\n//                             <header>{artist.name}</header>\n//                             <footer>Country of Origin: {artist.country.id ? \"ðŸ§¨\" : \"No\"}</footer>\n//                         </section>\n//                     }\n//                 )\n//             }\n//         </article>\n//     </>\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,eAAe;AAEtB,OAAO,MAAMC,UAAU,GAAG,QAAyB;EAAA;EAAA,IAAxB;IAAEC;EAAgB,CAAC;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACM,eAAe,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACnD,MAAMQ,QAAQ,GAAGP,WAAW,EAAE;EAE9B,MAAMQ,iBAAiB,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;EAC/D,MAAMC,kBAAkB,GAAGC,IAAI,CAACC,KAAK,CAACL,iBAAiB,CAAC;EAExDV,SAAS,CACL,MAAM;IACF,MAAMgB,eAAe,GAAGX,OAAO,CAACY,MAAM,CAACC,MAAM,IAAI;MAC7C,OAAOA,MAAM,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,UAAU,CAACjB,eAAe,CAACgB,WAAW,EAAE,CAAC;IAC9E,CAAC,CAAC;IACFZ,WAAW,CAACQ,eAAe,CAAC;EAChC,CAAC,EACD,CAAEZ,eAAe,CAAE,CACtB;EAEDJ,SAAS,CACL,MAAM;IACFsB,KAAK,CAAE,+BAA8B,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAEG,WAAW,IAAK;MACnBpB,UAAU,CAACoB,WAAW,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC,EACD,EAAE,CAAC;EAAA,CACN;;EAIL;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,CAAC;AAAA,GA9CYvB,UAAU;EAAA,QAGFD,WAAW;AAAA;AAAA,KAHnBC,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}