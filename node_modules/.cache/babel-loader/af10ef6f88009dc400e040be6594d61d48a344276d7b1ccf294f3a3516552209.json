{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ApplicationViews } from \"../views/ApplicationViews\";\nexport const ArtistForm = () => {\n  _s();\n  //     /*\n  //         TODO: Use the useNavigation() hook so you can redirect\n  //         the user to the Artist list\n  //     */\n  const navigate = useNavigate();\n  const localWavelandUser = localStorage.getItem(\"waveland_user\");\n  const wavelandUserObject = JSON.parse(localWavelandUser);\n  const [artist, update] = useState({\n    name: artist.name,\n    country: artist.country\n  });\n  const handleSaveButtonClick = event => {\n    event.preventDefault();\n    console.log(\"You clicked the button\");\n    // TODO: Create the object to be saved to the API\n    const artistToSendToAPI = {\n      userId: wavelandUserObject.id,\n      name: artist.name,\n      country: artist.country\n    };\n\n    // TODO: Perform the fetch() to POST the object to the API\n    return fetch(`http://localhost:8088/favorites`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(artistToSendToAPI)\n    }).then(res => res.json()).then(() => {\n      navigate(\"/favorites\");\n    });\n  };\n\n  //     return (\n  //         <form className=\"ArtistForm\">\n  //             <h2 className=\"ArtistForm__title\">New Service Artist</h2>\n  //             <fieldset>\n  //                 <div className=\"form-group\">\n  //                     <label htmlFor=\"description\">Description:</label>\n  //                     <input\n  //                         required autoFocus\n  //                         type=\"text\"\n  //                         className=\"form-control\"\n  //                         placeholder=\"Brief description of problem\"\n  //                         value={artist.description}\n  //                         onChange={\n  //                             (evt) => {\n  //                                 const copy = {...artist}\n  //                                 copy.description = evt.target.value\n  //                                 update(copy)\n  //                             }\n  //                         } />\n  //                 </div>\n  //             </fieldset>\n  //             <fieldset>\n  //                 <div className=\"form-group\">\n  //                     <label htmlFor=\"name\">Emergency:</label>\n  //                     <input type=\"checkbox\"\n  //                         value={artist.emergency}\n  //                         onChange={\n  //                             (event) => {\n  //                                 const copy = {...artist}\n  //                                 copy.emergency = event.target.checked\n  //                                 update(copy)\n  //                             }\n  //                         } />\n  //                 </div>\n  //             </fieldset>\n  //             <button \n  //                 onClick={(clickEvent) => handleSaveButtonClick(clickEvent)}\n  //                 className=\"btn btn-primary\">\n  //                     Submit Artist\n  //             </button>\n  //         </form>\n};\n_s(ArtistForm, \"GDyTlLb13fgowARXbRG2HCPBcjM=\", false, function () {\n  return [useNavigate];\n});\n_c = ArtistForm;\nvar _c;\n$RefreshReg$(_c, \"ArtistForm\");","map":{"version":3,"names":["useState","useNavigate","ApplicationViews","ArtistForm","navigate","localWavelandUser","localStorage","getItem","wavelandUserObject","JSON","parse","artist","update","name","country","handleSaveButtonClick","event","preventDefault","console","log","artistToSendToAPI","userId","id","fetch","method","headers","body","stringify","then","res","json"],"sources":["/Users/charlesseals/workspace/WaveLand/waveland-capstone/src/components/artists/ArtistForm.js"],"sourcesContent":["import { useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { ApplicationViews } from \"../views/ApplicationViews\"\n\nexport const ArtistForm = () => {\n    //     /*\n    //         TODO: Use the useNavigation() hook so you can redirect\n    //         the user to the Artist list\n    //     */\n    const navigate = useNavigate()    \n    const localWavelandUser = localStorage.getItem(\"waveland_user\")\n    const wavelandUserObject = JSON.parse(localWavelandUser)\n\n    const [artist, update] = useState({\n        name: artist.name,\n        country: artist.country,\n    })\n\n    const handleSaveButtonClick = (event) => {\n        event.preventDefault()\n        console.log(\"You clicked the button\")\n        // TODO: Create the object to be saved to the API\n        const artistToSendToAPI = {\n            userId: wavelandUserObject.id,\n            name: artist.name,\n            country: artist.country,\n        }\n            \n\n        // TODO: Perform the fetch() to POST the object to the API\n        return fetch(`http://localhost:8088/favorites`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(artistToSendToAPI)\n        })\n            .then(res => res.json())\n            .then(() => {\n                navigate(\"/favorites\")\n            })\n    }\n\n//     return (\n//         <form className=\"ArtistForm\">\n//             <h2 className=\"ArtistForm__title\">New Service Artist</h2>\n//             <fieldset>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"description\">Description:</label>\n//                     <input\n//                         required autoFocus\n//                         type=\"text\"\n//                         className=\"form-control\"\n//                         placeholder=\"Brief description of problem\"\n//                         value={artist.description}\n//                         onChange={\n//                             (evt) => {\n//                                 const copy = {...artist}\n//                                 copy.description = evt.target.value\n//                                 update(copy)\n//                             }\n//                         } />\n//                 </div>\n//             </fieldset>\n//             <fieldset>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"name\">Emergency:</label>\n//                     <input type=\"checkbox\"\n//                         value={artist.emergency}\n//                         onChange={\n//                             (event) => {\n//                                 const copy = {...artist}\n//                                 copy.emergency = event.target.checked\n//                                 update(copy)\n//                             }\n//                         } />\n//                 </div>\n//             </fieldset>\n//             <button \n//                 onClick={(clickEvent) => handleSaveButtonClick(clickEvent)}\n//                 className=\"btn btn-primary\">\n//                     Submit Artist\n//             </button>\n//         </form>\n    \n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,gBAAgB,QAAQ,2BAA2B;AAE5D,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;EAC5B;EACA;EACA;EACA;EACA,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAMI,iBAAiB,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;EAC/D,MAAMC,kBAAkB,GAAGC,IAAI,CAACC,KAAK,CAACL,iBAAiB,CAAC;EAExD,MAAM,CAACM,MAAM,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC;IAC9Ba,IAAI,EAAEF,MAAM,CAACE,IAAI;IACjBC,OAAO,EAAEH,MAAM,CAACG;EACpB,CAAC,CAAC;EAEF,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;IACrCA,KAAK,CAACC,cAAc,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrC;IACA,MAAMC,iBAAiB,GAAG;MACtBC,MAAM,EAAEb,kBAAkB,CAACc,EAAE;MAC7BT,IAAI,EAAEF,MAAM,CAACE,IAAI;MACjBC,OAAO,EAAEH,MAAM,CAACG;IACpB,CAAC;;IAGD;IACA,OAAOS,KAAK,CAAE,iCAAgC,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEjB,IAAI,CAACkB,SAAS,CAACP,iBAAiB;IAC1C,CAAC,CAAC,CACGQ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAC,MAAM;MACRxB,QAAQ,CAAC,YAAY,CAAC;IAC1B,CAAC,CAAC;EACV,CAAC;;EAEL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEA,CAAC;AAAA,GAjFYD,UAAU;EAAA,QAKFF,WAAW;AAAA;AAAA,KALnBE,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}