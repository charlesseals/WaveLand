{"ast":null,"code":"var _jsxFileName = \"/Users/charlesseals/workspace/WaveLand/waveland-capstone/src/components/artists/ArtistList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Artists.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ArtistList = () => {\n  _s();\n  const [artists, setArtists] = useState([]);\n  const localWavelandUser = localStorage.getItem(\"waveland_user\");\n  const wavelandUserObject = JSON.parse(localWavelandUser);\n  useEffect(() => {\n    fetch(`http://localhost:8088/artists`).then(res => res.json()).then(artistArray => {\n      setArtists(artistArray);\n    });\n  }, [] // When this array is empty, you are observing initial component state\n  );\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"artists\",\n      children: artists.map(artist => {\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"artist\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            children: artist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n            children: artist.countryId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 41\n          }, this)]\n        }, `Artist--${artist.id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 44\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n\n// useEffect(\n//     () => {\n//         const searchedArtists = artists.filter(artist => {\n//             return artist.name.toLowerCase().startsWith(searchTermState.toLowerCase())\n//         })\n//         setFiltered(searchedArtists)\n//     },\n//     [ searchTermState ]\n// )\n_s(ArtistList, \"myO3VIklrIMVqFD52MxwExKe+k4=\");\n_c = ArtistList;\nvar _c;\n$RefreshReg$(_c, \"ArtistList\");","map":{"version":3,"names":["useEffect","useState","useNavigate","ArtistList","artists","setArtists","localWavelandUser","localStorage","getItem","wavelandUserObject","JSON","parse","fetch","then","res","json","artistArray","map","artist","name","countryId","id"],"sources":["/Users/charlesseals/workspace/WaveLand/waveland-capstone/src/components/artists/ArtistList.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Artists.css\"\n\nexport const ArtistList = () => {\n    const [artists, setArtists] = useState([])\n\n    const localWavelandUser = localStorage.getItem(\"waveland_user\")\n    const wavelandUserObject = JSON.parse(localWavelandUser)\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/artists`)\n            .then(res => res.json())\n            .then((artistArray) => {\n                setArtists(artistArray)\n            })\n        },\n        [] // When this array is empty, you are observing initial component state\n        )\n                return <>\n                \n            \n                    <h2>List of Artists</h2>\n            \n                    <article className=\"artists\">\n                        {\n                            artists.map(\n                                (artist) => {\n                                    return <section className=\"artist\" key={`Artist--${artist.id}`}>\n                                        <header>{artist.name}</header>\n                                        <footer>{artist.countryId}</footer>\n                                    </section>\n                                }\n                            )\n                        }\n                    </article>\n            \n                </>\n            }\n\n    // useEffect(\n    //     () => {\n    //         const searchedArtists = artists.filter(artist => {\n    //             return artist.name.toLowerCase().startsWith(searchTermState.toLowerCase())\n    //         })\n    //         setFiltered(searchedArtists)\n    //     },\n    //     [ searchTermState ]\n    // )\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,eAAe;AAAA;AAAA;AAEtB,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMK,iBAAiB,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;EAC/D,MAAMC,kBAAkB,GAAGC,IAAI,CAACC,KAAK,CAACL,iBAAiB,CAAC;EAExDN,SAAS,CACL,MAAM;IACFY,KAAK,CAAE,+BAA8B,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAEG,WAAW,IAAK;MACnBX,UAAU,CAACW,WAAW,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC,EACD,EAAE,CAAC;EAAA,CACF;;EACO,oBAAO;IAAA,wBAGH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB,eAExB;MAAS,SAAS,EAAC,SAAS;MAAA,UAEpBZ,OAAO,CAACa,GAAG,CACNC,MAAM,IAAK;QACR,oBAAO;UAAS,SAAS,EAAC,QAAQ;UAAA,wBAC9B;YAAA,UAASA,MAAM,CAACC;UAAI;YAAA;YAAA;YAAA;UAAA,QAAU,eAC9B;YAAA,UAASD,MAAM,CAACE;UAAS;YAAA;YAAA;YAAA;UAAA,QAAU;QAAA,GAFE,WAAUF,MAAM,CAACG,EAAG,EAAC;UAAA;UAAA;UAAA;QAAA,QAGpD;MACd,CAAC;IACJ;MAAA;MAAA;MAAA;IAAA,QAEC;EAAA,gBAEX;AACP,CAAC;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GA7CSlB,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}