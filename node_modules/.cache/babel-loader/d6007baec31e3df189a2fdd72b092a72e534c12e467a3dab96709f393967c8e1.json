{"ast":null,"code":"var _jsxFileName = \"/Users/charlesseals/workspace/honey-rae-repairs/src/components/profile/EmployeeForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EmployeeForm = () => {\n  _s();\n  // TODO: Provide initial state for profile\n  const [profile, updateProfile] = useState({\n    specialty: \"\",\n    rate: 0,\n    userId: 0\n  });\n  const localHoneyUser = localStorage.getItem(\"honey_user\");\n  const honeyUserObject = JSON.parse(localHoneyUser);\n\n  // TODO: Get employee profile info from API and update state\n  useEffect(() => {\n    fetch(`http://localhost:8088/employees?userId=${honeyUserObject.id}`).then(res => res.json()).then(data => {\n      const employeeObject = data[0];\n      updateProfile(employeeObject);\n    });\n  }, []);\n  const handleSaveButtonClick = event => {\n    event.preventDefault();\n\n    /*\n        TODO: Perform the PUT fetch() call here to update the profile.\n        Navigate user to home page when done.\n    */\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${feedback.includes(\"Error\") ? \"error\" : \"feedback\"} ${feedback === \"\" ? \"invisible\" : \"visible\"}`,\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"profile__title\",\n        children: \"New Service Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"specialty\",\n            children: \"Specialty:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            autoFocus: true,\n            type: \"text\",\n            className: \"form-control\",\n            value: profile.specialty,\n            onChange: evt => {\n              // TODO: Update specialty property\n              const copy = {\n                ...profile\n              };\n              copy.specialty = evt.target.value;\n              updateProfile(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Hourly rate:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            value: profile.rate,\n            onChange: evt => {\n              // TODO: Update rate property\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickEvent => handleSaveButtonClick(clickEvent),\n        className: \"btn btn-primary\",\n        children: \"Save Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(EmployeeForm, \"iXnX4Bl3ZbFN9afbprtOgUxkIMk=\");\n_c = EmployeeForm;\nvar _c;\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"names":["useEffect","useState","EmployeeForm","profile","updateProfile","specialty","rate","userId","localHoneyUser","localStorage","getItem","honeyUserObject","JSON","parse","fetch","id","then","res","json","data","employeeObject","handleSaveButtonClick","event","preventDefault","feedback","includes","evt","copy","target","value","clickEvent"],"sources":["/Users/charlesseals/workspace/honey-rae-repairs/src/components/profile/EmployeeForm.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\n\nexport const EmployeeForm = () => {\n    // TODO: Provide initial state for profile\n    const [profile, updateProfile] = useState({\n        specialty: \"\",\n        rate: 0,\n        userId: 0\n    })\n\n\n    const localHoneyUser = localStorage.getItem(\"honey_user\")\n    const honeyUserObject = JSON.parse(localHoneyUser)\n\n\n    // TODO: Get employee profile info from API and update state\n    useEffect(() => {\n        fetch(`http://localhost:8088/employees?userId=${honeyUserObject.id}`)\n            .then(res => res.json())\n            .then((data) => {\n                    const employeeObject = data[0]\n                    updateProfile(employeeObject)\n            })\n    }, [])\n\n    const handleSaveButtonClick = (event) => {\n        event.preventDefault()\n\n        /*\n            TODO: Perform the PUT fetch() call here to update the profile.\n            Navigate user to home page when done.\n        */\n    }\n\n    return (\n        <>\n        <div className={`${feedback.includes(\"Error\") ? \"error\" : \"feedback\"} ${feedback === \"\" ? \"invisible\" : \"visible\"}`}>\n    {feedback}\n    </div>\n        <form className=\"profile\">\n            <h2 className=\"profile__title\">New Service Ticket</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"specialty\">Specialty:</label>\n                    <input\n                        required autoFocus\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={profile.specialty}\n                        onChange={\n                            (evt) => {\n                                // TODO: Update specialty property\n                                    const copy = {...profile}\n                                    copy.specialty = evt.target.value\n                                    updateProfile(copy)\n                            }\n                        } />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Hourly rate:</label>\n                    <input type=\"number\"\n                        className=\"form-control\"\n                        value={profile.rate}\n                        onChange={\n                            (evt) => {\n                                // TODO: Update rate property\n                            }\n                        } />\n                </div>\n            </fieldset>\n            <button\n                onClick={(clickEvent) => handleSaveButtonClick(clickEvent)}\n                className=\"btn btn-primary\">\n                Save Profile\n            </button>\n        </form>\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAE3C,OAAO,MAAMC,YAAY,GAAG,MAAM;EAAA;EAC9B;EACA,MAAM,CAACC,OAAO,EAAEC,aAAa,CAAC,GAAGH,QAAQ,CAAC;IACtCI,SAAS,EAAE,EAAE;IACbC,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE;EACZ,CAAC,CAAC;EAGF,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EACzD,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACL,cAAc,CAAC;;EAGlD;EACAR,SAAS,CAAC,MAAM;IACZc,KAAK,CAAE,0CAAyCH,eAAe,CAACI,EAAG,EAAC,CAAC,CAChEC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAEG,IAAI,IAAK;MACR,MAAMC,cAAc,GAAGD,IAAI,CAAC,CAAC,CAAC;MAC9Bf,aAAa,CAACgB,cAAc,CAAC;IACrC,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;IACrCA,KAAK,CAACC,cAAc,EAAE;;IAEtB;AACR;AACA;AACA;EACI,CAAC;;EAED,oBACI;IAAA,wBACA;MAAK,SAAS,EAAG,GAAEC,QAAQ,CAACC,QAAQ,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,UAAW,IAAGD,QAAQ,KAAK,EAAE,GAAG,WAAW,GAAG,SAAU,EAAE;MAAA,UACvHA;IAAQ;MAAA;MAAA;MAAA;IAAA,QACH,eACF;MAAM,SAAS,EAAC,SAAS;MAAA,wBACrB;QAAI,SAAS,EAAC,gBAAgB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAwB,eACtD;QAAA,uBACI;UAAK,SAAS,EAAC,YAAY;UAAA,wBACvB;YAAO,OAAO,EAAC,WAAW;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAmB,eAC7C;YACI,QAAQ;YAAC,SAAS;YAClB,IAAI,EAAC,MAAM;YACX,SAAS,EAAC,cAAc;YACxB,KAAK,EAAErB,OAAO,CAACE,SAAU;YACzB,QAAQ,EACHqB,GAAG,IAAK;cACL;cACI,MAAMC,IAAI,GAAG;gBAAC,GAAGxB;cAAO,CAAC;cACzBwB,IAAI,CAACtB,SAAS,GAAGqB,GAAG,CAACE,MAAM,CAACC,KAAK;cACjCzB,aAAa,CAACuB,IAAI,CAAC;YAC3B;UACH;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MACN;QAAA;QAAA;QAAA;MAAA,QACC,eACX;QAAA,uBACI;UAAK,SAAS,EAAC,YAAY;UAAA,wBACvB;YAAO,OAAO,EAAC,MAAM;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAqB,eAC1C;YAAO,IAAI,EAAC,QAAQ;YAChB,SAAS,EAAC,cAAc;YACxB,KAAK,EAAExB,OAAO,CAACG,IAAK;YACpB,QAAQ,EACHoB,GAAG,IAAK;cACL;YAAA;UAEP;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MACN;QAAA;QAAA;QAAA;MAAA,QACC,eACX;QACI,OAAO,EAAGI,UAAU,IAAKT,qBAAqB,CAACS,UAAU,CAAE;QAC3D,SAAS,EAAC,iBAAiB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEtB;IAAA;MAAA;MAAA;MAAA;IAAA,QACN;EAAA,gBACJ;AAEX,CAAC;AAAA,GA9EY5B,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}