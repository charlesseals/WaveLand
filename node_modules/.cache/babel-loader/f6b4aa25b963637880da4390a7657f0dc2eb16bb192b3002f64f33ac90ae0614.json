{"ast":null,"code":"var _jsxFileName = \"/Users/charlesseals/workspace/WaveLand/waveland-capstone/src/components/favorites/FavoriteList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Favorites.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FavoriteList = _ref => {\n  _s();\n  let {\n    searchTermState\n  } = _ref;\n  const [favorites, setFavorite] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [filteredArtists, setFiltered] = useState([]);\n  const navigate = useNavigate();\n  const localWavelandUser = localStorage.getItem(\"waveland_user\");\n  const wavelandUserObject = JSON.parse(localWavelandUser);\n  const [deleteButton, setDeleteButton] = useState(false);\n  useEffect(() => {\n    fetch(`http://localhost:8088/favorites?_expand=artist`).then(res => res.json()).then(artistArray => {\n      setFavorite(artistArray);\n      setFiltered(artistArray);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`http://localhost:8088/countries`).then(res => res.json()).then(countriesArray => {\n      setCountries(countriesArray);\n    });\n  }, []);\n  useEffect(() => {\n    const searchedCountry = countries.filter(country => {\n      return country === null || country === void 0 ? void 0 : country.name.toLowerCase().startsWith(searchTermState.toLowerCase());\n    });\n    const searchedFilteredFavorites = [];\n    for (const favorite of favorites) {\n      for (const country of searchedCountry) {\n        if (country.id === favorite.artist.countryId) {\n          searchedFilteredFavorites.push(favorite);\n        }\n      }\n    }\n    setFiltered(searchedFilteredFavorites);\n  }, [searchTermState]);\n  const deleteFavoriteButton = id => {\n    // event.preventDefault()\n    console.log(\"You clicked the button\");\n    fetch(`http://localhost:8088/favorites/${id}`, {\n      method: \"DELETE\"\n    }).then(res => {});\n    const button = !deleteButton;\n    setDeleteButton(button);\n\n    //     .then(() => {\n\n    // })\n\n    // .then(() => {\n    //     navigate(\"/favorites\")\n    // })\n  };\n\n  useEffect(() => {\n    fetch(`http://localhost:8088/favorites?_expand=artist`).then(res => res.json()).then(artistArray => {\n      setFavorite(artistArray);\n      setFiltered(artistArray);\n    });\n  }, [deleteButton]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Favorite Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"artists\",\n      children: filteredArtists.map(\n      // artists.map(\n\n      artist => {\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"artist\",\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: artist.artist.image,\n                alt: \"image\",\n                width: 300,\n                height: 300\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: artist.artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"favorites\",\n              id: `${artist.id}`,\n              onClick: event => {\n                deleteFavoriteButton(parseInt(event.target.id));\n              },\n              children: \"Remove Favorite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: countries.map(country => {\n                if (artist.artist.countryId === country.id) {\n                  return country.name;\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true)\n        }, `Artist--${artist.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 44\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n\n//}       \n_s(FavoriteList, \"hFkKaW1LbDAguU37aeR9Mk3Fw5o=\", false, function () {\n  return [useNavigate];\n});\n_c = FavoriteList;\nvar _c;\n$RefreshReg$(_c, \"FavoriteList\");","map":{"version":3,"names":["useEffect","useState","useNavigate","FavoriteList","searchTermState","favorites","setFavorite","countries","setCountries","filteredArtists","setFiltered","navigate","localWavelandUser","localStorage","getItem","wavelandUserObject","JSON","parse","deleteButton","setDeleteButton","fetch","then","res","json","artistArray","countriesArray","searchedCountry","filter","country","name","toLowerCase","startsWith","searchedFilteredFavorites","favorite","id","artist","countryId","push","deleteFavoriteButton","console","log","method","button","map","image","event","parseInt","target"],"sources":["/Users/charlesseals/workspace/WaveLand/waveland-capstone/src/components/favorites/FavoriteList.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Favorites.css\"\n\nexport const FavoriteList = ({searchTermState}) => {\n    const [favorites, setFavorite] = useState([])\n    const [countries, setCountries] = useState([])\n    const [filteredArtists, setFiltered] = useState([])\n    const navigate = useNavigate()\n    const localWavelandUser = localStorage.getItem(\"waveland_user\")\n    const wavelandUserObject = JSON.parse(localWavelandUser)\n    const [deleteButton, setDeleteButton] = useState(false)\n\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/favorites?_expand=artist`)\n            .then(res => res.json())\n            .then((artistArray) => {\n                setFavorite(artistArray)\n                setFiltered(artistArray)\n            })\n        },\n        []\n        )\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/countries`)\n            .then(res => res.json())\n            .then((countriesArray) => {\n                setCountries(countriesArray)\n            })\n        },\n        []\n        )\n    useEffect(\n        () => {\n            const searchedCountry = countries.filter(country => {\n                return country?.name.toLowerCase().startsWith(searchTermState.toLowerCase()) \n            })\n            const searchedFilteredFavorites = []\n            for (const favorite of favorites) {\n                for (const country of searchedCountry) {\n                    if (country.id === favorite.artist.countryId) {\n                        searchedFilteredFavorites.push(favorite)\n                    }\n                }\n            }\n            setFiltered(searchedFilteredFavorites)\n        },\n        [ searchTermState ]\n    )\n        \n\nconst deleteFavoriteButton = (id) => {\n    // event.preventDefault()\n    console.log(\"You clicked the button\")\n    fetch(`http://localhost:8088/favorites/${id}`, {\n        method: \"DELETE\",\n        })\n        .then((res) => {\n\n        })\n            const button = !deleteButton\n            setDeleteButton(button)\n\n        //     .then(() => {\n                \n        // })\n\n        // .then(() => {\n        //     navigate(\"/favorites\")\n        // })\n    }\n    useEffect(\n        () => {\n            fetch(`http://localhost:8088/favorites?_expand=artist`)\n            .then(res => res.json())\n            .then((artistArray) => {\n                setFavorite(artistArray)\n                setFiltered(artistArray)\n            })\n        },\n        [deleteButton]\n        )\n\n                return <>\n                \n            \n                    <h2>Favorite Artists</h2>\n            \n                    <article className=\"artists\">\n                        {\n                            filteredArtists.map(\n                            // artists.map(\n\n                                (artist) => {\n                                    return <section className=\"artist\" key={`Artist--${artist.id}`}>\n                                        <>\n                                            <div className=\"image\">                                   \n                                                <img src={artist.artist.image} alt=\"image\" width={300} height={300}/>\n                                            </div>\n                                            <h2>{artist.artist.name}</h2>\n                                            <button className=\"favorites\" id={`${artist.id}`} onClick={(event) => {\n                                                deleteFavoriteButton(parseInt(event.target.id))\n                                            }}>Remove Favorite</button>\n                                            {/* <div>{ArtistForm}</div> */}\n                                            \n                                            <h4>{\n                                                countries.map(\n                                                    (country) => {\n                                                        if (artist.artist.countryId === country.id) {\n                                                            return country.name\n                                                        }\n                                                    }\n                                                )\n                                                }</h4>\n                                        </>\n                                    </section>\n                                }\n                            )\n                        }\n                    </article>\n            \n                </>\n            }\n\n        //}       \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}