{"ast":null,"code":"var _jsxFileName = \"/Users/charlesseals/workspace/honey-rae-repairs/src/components/tickets/TicketForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ApplicationViews } from \"../views/ApplicationViews\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TicketForm = () => {\n  _s();\n  /*\n      TODO: Add the correct default properties to the\n      initial state object\n  */\n  const [ticket, update] = useState({\n    description: \"\",\n    emergency: false\n  });\n  /*\n      TODO: Use the useNavigation() hook so you can redirect\n      the user to the ticket list\n  */\n  const navigate = useNavigate();\n  const localHoneyUser = localStorage.getItem(\"honey_user\");\n  const honeyUserObject = JSON.parse(localHoneyUser);\n  const handleSaveButtonClick = event => {\n    event.preventDefault();\n\n    // TODO: Create the object to be saved to the API\n    /*\n        {\n        \"id\": 1,\n        \"userId\": 3,\n        \"description\": \"Saepe ex sapiente deserunt et voluptas fugiat vero quasi. Ipsam est non ipsa. Occaecati rerum ipsa consequuntur. Ratione commodi unde sint non rerum. Sit quia et aut sunt.\",\n        \"emergency\": false,\n        \"dateCompleted\": \"Fri Apr 29 2022 14:02:20 GMT-0500 (Central Daylight Time)\"\n        }\n    */\n    const ticketToSentToAPI = {\n      userId: honeyUserObject.id,\n      desctiption: ticket.description,\n      emergency: ticket.emergency,\n      dateCompleted: \"\"\n    };\n\n    // TODO: Perform the fetch() to POST the object to the API\n    return fetch(`http://localhost:8088/serviceTickets`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(ticketToSentToAPI)\n    }).then(res => res.json()).then(() => {\n      navigate(\"/tickets\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ticketForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"ticketForm__title\",\n      children: \"New Service Ticket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          autoFocus: true,\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Brief description of problem\",\n          value: ticket.description,\n          onChange: evt => {\n            const copy = {\n              ...ticket\n            };\n            copy.description = evt.target.value;\n            update(copy);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Emergency:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: ticket.emergency,\n          onChange: event => {\n            const copy = {\n              ...ticket\n            };\n            copy.emergency = event.target.checked;\n            update(copy);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickEvent => handleSaveButtonClick(clickEvent),\n      className: \"btn btn-primary\",\n      children: \"Submit Ticket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(TicketForm, \"fKjdS8cWyNd4bqsSA6vUTsY9zss=\", false, function () {\n  return [useNavigate];\n});\n_c = TicketForm;\nvar _c;\n$RefreshReg$(_c, \"TicketForm\");","map":{"version":3,"names":["useState","useNavigate","ApplicationViews","TicketForm","ticket","update","description","emergency","navigate","localHoneyUser","localStorage","getItem","honeyUserObject","JSON","parse","handleSaveButtonClick","event","preventDefault","ticketToSentToAPI","userId","id","desctiption","dateCompleted","fetch","method","headers","body","stringify","then","res","json","evt","copy","target","value","checked","clickEvent"],"sources":["/Users/charlesseals/workspace/honey-rae-repairs/src/components/tickets/TicketForm.js"],"sourcesContent":["import { useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { ApplicationViews } from \"../views/ApplicationViews\"\n\nexport const TicketForm = () => {\n    /*\n        TODO: Add the correct default properties to the\n        initial state object\n    */\n    const [ticket, update] = useState({\n        description: \"\",\n        emergency: false\n    })\n    /*\n        TODO: Use the useNavigation() hook so you can redirect\n        the user to the ticket list\n    */\n    const navigate = useNavigate()\n\n    const localHoneyUser = localStorage.getItem(\"honey_user\")\n    const honeyUserObject = JSON.parse(localHoneyUser)\n\n    const handleSaveButtonClick = (event) => {\n        event.preventDefault()\n\n        // TODO: Create the object to be saved to the API\n        /*\n            {\n            \"id\": 1,\n            \"userId\": 3,\n            \"description\": \"Saepe ex sapiente deserunt et voluptas fugiat vero quasi. Ipsam est non ipsa. Occaecati rerum ipsa consequuntur. Ratione commodi unde sint non rerum. Sit quia et aut sunt.\",\n            \"emergency\": false,\n            \"dateCompleted\": \"Fri Apr 29 2022 14:02:20 GMT-0500 (Central Daylight Time)\"\n            }\n        */\n        const ticketToSentToAPI = {\n            userId: honeyUserObject.id,\n            desctiption: ticket.description,\n            emergency: ticket.emergency,\n            dateCompleted: \"\"\n        }\n            \n\n        // TODO: Perform the fetch() to POST the object to the API\n        return fetch(`http://localhost:8088/serviceTickets`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(ticketToSentToAPI)\n        })\n            .then(res => res.json())\n            .then(() => {\n                navigate(\"/tickets\")\n            })\n    }\n\n    return (\n        <form className=\"ticketForm\">\n            <h2 className=\"ticketForm__title\">New Service Ticket</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"description\">Description:</label>\n                    <input\n                        required autoFocus\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Brief description of problem\"\n                        value={ticket.description}\n                        onChange={\n                            (evt) => {\n                                const copy = {...ticket}\n                                copy.description = evt.target.value\n                                update(copy)\n                            }\n                        } />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Emergency:</label>\n                    <input type=\"checkbox\"\n                        value={ticket.emergency}\n                        onChange={\n                            (event) => {\n                                const copy = {...ticket}\n                                copy.emergency = event.target.checked\n                                update(copy)\n                            }\n                        } />\n                </div>\n            </fieldset>\n            <button \n                onClick={(clickEvent) => handleSaveButtonClick(clickEvent)}\n                className=\"btn btn-primary\">\n                    Submit Ticket\n            </button>\n        </form>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}